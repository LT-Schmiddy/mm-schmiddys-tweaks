#include "tweak_globals.h"

#include "z64horse.h"
#include "overlays/gamestates/ovl_file_choose/z_file_select.h"

void Sram_SyncWriteToFlash(SramContext* sramCtx, s32 curPage, s32 numPages);
void func_80147314(SramContext* sramCtx, s32 fileNum);
void func_80147414(SramContext* sramCtx, s32 fileNum, s32 arg2);

#define CHECK_NEWF(newf)                                                                                 \
    ((newf)[0] != 'Z' || (newf)[1] != 'E' || (newf)[2] != 'L' || (newf)[3] != 'D' || (newf)[4] != 'A' || \
     (newf)[5] != '3')

typedef struct PersistentCycleSceneFlags {
    /* 0x0 */ u32 switch0;
    /* 0x4 */ u32 switch1;
    /* 0x8 */ u32 chest;
    /* 0xC */ u32 collectible;
} PersistentCycleSceneFlags; // size = 0x10

#define PERSISTENT_CYCLE_FLAGS_SET(switch0, switch1, chest, collectible) { switch0, switch1, chest, collectible },
#define PERSISTENT_CYCLE_FLAGS_NONE PERSISTENT_CYCLE_FLAGS_SET(0, 0, 0, 0)

#define DEFINE_SCENE(_name, _enumValue, _textId, _drawConfig, _restrictionFlags, persistentCycleFlags) \
    persistentCycleFlags
#define DEFINE_SCENE_UNSET(_enumValue) PERSISTENT_CYCLE_FLAGS_NONE

/**
 * Array of bitwise flags which won't be turned off on a cycle reset (will persist between cycles)
 */
PersistentCycleSceneFlags sPersistentCycleSceneFlags[SCENE_MAX] = {
#include "tables/scene_table.h"
};

#undef DEFINE_SCENE
#undef DEFINE_SCENE_UNSET

// Each flag has 2 bits to store persistence over the three-day reset cycle
// Only 1 of these bits need to be set to persist (Values 1, 2, 3).
// Therefore, the final game does not distinguish between these two macros in use
#define PERSISTENT_WEEKEVENTREG(flag) (3 << (2 * BIT_FLAG_TO_SHIFT(flag)))
#define PERSISTENT_WEEKEVENTREG_ALT(flag) (2 << (2 * BIT_FLAG_TO_SHIFT(flag)))

// weekEventReg flags which will be not be cleared on a cycle reset
//! @note The index of the flag in this array must be the same to its index in the WeekeventReg array
//!       Only the mask is read from the `PERSISTENT_` macros.
u16 sPersistentCycleWeekEventRegs[ARRAY_COUNT(gSaveContext.save.saveInfo.weekEventReg)] = {
    /*  0 */
    PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_TERMINA_FIELD) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_IKANA_GRAVEYARD) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_ROMANI_RANCH) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_GORMAN_TRACK) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_MOUNTAIN_VILLAGE_WINTER) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_GORON_SHRINE) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_SNOWHEAD),
    /*  1 */
    PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_SOUTHERN_SWAMP_POISONED) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_WOODFALL) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_DEKU_PALACE) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_GREAT_BAY_COAST) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_PIRATES_FORTRESS) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_ZORA_HALL) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_WATERFALL_RAPIDS) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_IKANA_CANYON),
    /*  2 */
    PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_IKANA_CASTLE) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_STONE_TOWER) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_STONE_TOWER_INVERTED) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_EAST_CLOCK_TOWN) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_WEST_CLOCK_TOWN) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_NORTH_CLOCK_TOWN) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_WOODFALL_TEMPLE) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_SNOWHEAD_TEMPLE),
    /*  3 */
    PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_PIRATES_FORTRESS_EXTERIOR) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_STONE_TOWER_TEMPLE) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_STONE_TOWER_TEMPLE_INVERTED) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_THE_MOON) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_MOON_DEKU_TRIAL) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_MOON_GORON_TRIAL) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_MOON_ZORA_TRIAL) | PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_03_80),
    /*  4 */ 0,
    /*  5 */ 0,
    /*  6 */ 0,
    /*  7 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_ENTERED_WOODFALL_TEMPLE_PRISON),
    /*  8 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_RECEIVED_DOGGY_RACETRACK_HEART_PIECE),
    /*  9 */ 0,
    /* 10 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_10_08),
    /* 11 */ 0,
    /* 12 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_RECEIVED_KOTAKE_BOTTLE),
    /* 13 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_RECEIVED_OCEANSIDE_WALLET_UPGRADE),
    /* 14 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_RECEIVED_DEKU_PLAYGROUND_HEART_PIECE),
    /* 15 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_15_20),
    /* 16 */ 0,
    /* 17 */ 0,
    /* 18 */ 0,
    /* 19 */ 0,
    /* 20 */ 0,
    /* 21 */ 0,
    /* 22 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_22_02) | PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_22_80),
    /* 23 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_OBTAINED_GREAT_SPIN_ATTACK) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_23_80),
    /* 24 */ PERSISTENT_WEEKEVENTREG_ALT(WEEKEVENTREG_24_02) | PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_24_80),
    /* 25 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_25_01),
    /* 26 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_26_40),
    /* 27 */ 0,
    /* 28 */ 0,
    /* 29 */ 0,
    /* 30 */
    PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_30_10) | PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_30_20) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_30_40) | PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_30_80),
    /* 31 */
    PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_31_01) | PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_31_02) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_31_04) | PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_31_20),
    /* 32 */
    PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_32_01) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_RECEIVED_SWAMP_SHOOTING_GALLERY_HEART_PIECE) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_RECEIVED_TOWN_SHOOTING_GALLERY_HEART_PIECE),
    /* 33 */ 0,
    /* 34 */ 0,
    /* 35 */
    PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_TINGLE_MAP_BOUGHT_CLOCK_TOWN) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_TINGLE_MAP_BOUGHT_WOODFALL) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_TINGLE_MAP_BOUGHT_SNOWHEAD) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_TINGLE_MAP_BOUGHT_ROMANI_RANCH) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_TINGLE_MAP_BOUGHT_GREAT_BAY) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_TINGLE_MAP_BOUGHT_STONE_TOWER) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_35_80),
    /* 36 */ 0,
    /* 37 */ 0,
    /* 38 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_38_20),
    /* 39 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_39_20),
    /* 40 */ 0,
    /* 41 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_41_08),
    /* 42 */ 0,
    /* 43 */ 0,
    /* 44 */ 0,
    /* 45 */ 0,
    /* 46 */ 0,
    /* 47 */ 0,
    /* 48 */ 0,
    /* 49 */ 0,
    /* 50 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_50_02) | PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_50_04),
    /* 51 */ PERSISTENT_WEEKEVENTREG_ALT(WEEKEVENTREG_51_04),
    /* 52 */ 0,
    /* 53 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_53_02) | PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_53_40),
    /* 54 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_54_40),
    /* 55 */ 0,
    /* 56 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_56_02),
    /* 57 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_57_08),
    /* 58 */ 0,
    /* 59 */
    PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_59_04) | PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_59_08) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_RECEIVED_SWAMP_SHOOTING_GALLERY_QUIVER_UPGRADE) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_RECEIVED_TOWN_SHOOTING_GALLERY_QUIVER_UPGRADE),
    /* 60 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_60_10),
    /* 61 */ 0,
    /* 62 */ 0,
    /* 63 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_63_20),
    /* 64 */ 0,
    /* 65 */ 0,
    /* 66 */
    PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_MET_ANJU) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_MET_KAFEI) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_MET_CURIOSITY_SHOP_MAN) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_MET_BOMB_SHOP_LADY) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_MET_ROMANI) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_MET_CREMIA) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_MET_MAYOR_DOTOUR) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_MET_MADAME_AROMA),
    /* 67 */
    PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_MET_TOTO) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_MET_GORMAN) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_MET_POSTMAN) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_MET_ROSA_SISTERS) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_MET_TOILET_HAND) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_MET_ANJUS_GRANDMOTHER) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_MET_KAMARO) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_MET_GROG),
    /* 68 */
    PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_MET_GORMAN_BROTHERS) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_MET_SHIRO) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_MET_GURU_GURU) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_MET_BOMBERS) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_RECEIVED_ROOM_KEY) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_PROMISED_MIDNIGHT_MEETING) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_PROMISED_TO_MEET_KAFEI) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_RECEIVED_LETTER_TO_KAFEI),
    /* 69 */
    PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_DEPOSITED_LETTER_TO_KAFEI) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_RECEIVED_PENDANT_OF_MEMORIES) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_DELIVERED_PENDANT_OF_MEMORIES) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_ESCAPED_SAKONS_HIDEOUT) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_PROMISED_TO_HELP_WITH_THEM) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_DEFENDED_AGAINST_THEM) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_RECEIVED_MILK_BOTTLE) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_ESCORTED_CREMIA),
    /* 70 */
    PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_RECEIVED_ROMANIS_MASK) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_RECEIVED_KEATON_MASK) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_RECEIVED_PRIORITY_MAIL) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_DELIVERED_PRIORITY_MAIL) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_LEARNED_SECRET_CODE) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_RECEIVED_BOMBERS_NOTEBOOK) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_RECEIVED_MAYOR_HP) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_RECEIVED_ROSA_SISTERS_HP),
    /* 71 */
    PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_RECEIVED_TOILET_HAND_HP) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_RECEIVED_GRANDMA_SHORT_STORY_HP) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_RECEIVED_GRANDMA_LONG_STORY_HP) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_RECEIVED_POSTMAN_HP) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_RECEIVED_KAFEIS_MASK) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_RECEIVED_ALL_NIGHT_MASK) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_RECEIVED_BUNNY_HOOD) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_RECEIVED_GAROS_MASK),
    /* 72 */
    PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_RECEIVED_CIRCUS_LEADERS_MASK) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_RECEIVED_POSTMANS_HAT) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_RECEIVED_COUPLES_MASK) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_RECEIVED_BLAST_MASK) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_RECEIVED_KAMAROS_MASK) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_RECEIVED_STONE_MASK) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_BOMBERS_NOTEBOOK_EVENT_RECEIVED_BREMEN_MASK) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_72_80),
    /* 73 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_73_08),
    /* 74 */ 0,
    /* 75 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_75_80),
    /* 76 */ 0,
    /* 77 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_77_01),
    /* 78 */ 0,
    /* 79 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_79_80),
    /* 80 */ 0,
    /* 81 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_81_08),
    /* 82 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_82_10),
    /* 83 */ 0,
    /* 84 */ 0,
    /* 85 */ 0,
    /* 86 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_86_80),
    /* 87 */
    PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_87_04) | PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_87_08) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_87_10) | PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_87_20) |
        PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_87_40) | PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_87_80),
    /* 88 */ 0,
    /* 89 */ 0,
    /* 90 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_90_10),
    /* 91 */ 0,
    /* 92 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_92_80),
    /* 93 */ PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_93_04) | PERSISTENT_WEEKEVENTREG(WEEKEVENTREG_93_08),
    /* 94 */ 0,
    /* 95 */ 0,
    /* 96 */ 0,
    /* 97 */ 0,
    /* 98 */ 0,
    /* 99 */ 0,
};

// Unused remnant values from OoT. Not the correct sizes in MM.
#define OOT_SAVECONTEXT_SIZE 0x1428
#define OOT_SLOT_SIZE (OOT_SAVECONTEXT_SIZE + 0x28)
#define OOT_SRAM_HEADER_SIZE 0x10
#define OOT_SLOT_OFFSET(index) (OOT_SRAM_HEADER_SIZE + 0x10 + (index * OOT_SLOT_SIZE))

// used in other files
u32 gSramSlotOffsets[] = {
    OOT_SLOT_OFFSET(0),
    OOT_SLOT_OFFSET(1),
    OOT_SLOT_OFFSET(2),
    // the latter three saves are backup saves for the former saves (in OoT)
    OOT_SLOT_OFFSET(3),
    OOT_SLOT_OFFSET(4),
    OOT_SLOT_OFFSET(5),
};

u8 gAmmoItems[] = {
    ITEM_NONE,           // SLOT_OCARINA
    ITEM_BOW,            // SLOT_BOW
    ITEM_NONE,           // SLOT_ARROW_FIRE
    ITEM_NONE,           // SLOT_ARROW_ICE
    ITEM_NONE,           // SLOT_ARROW_LIGHT
    ITEM_NONE,           // SLOT_TRADE_DEED
    ITEM_BOMB,           // SLOT_BOMB
    ITEM_BOMBCHU,        // SLOT_BOMBCHU
    ITEM_DEKU_STICK,     // SLOT_DEKU_STICK
    ITEM_DEKU_NUT,       // SLOT_DEKU_NUT
    ITEM_MAGIC_BEANS,    // SLOT_MAGIC_BEANS
    ITEM_NONE,           // SLOT_TRADE_KEY_MAMA
    ITEM_POWDER_KEG,     // SLOT_POWDER_KEG
    ITEM_PICTOGRAPH_BOX, // SLOT_PICTOGRAPH_BOX
    ITEM_NONE,           // SLOT_LENS_OF_TRUTH
    ITEM_NONE,           // SLOT_HOOKSHOT
    ITEM_NONE,           // SLOT_SWORD_GREAT_FAIRY
    ITEM_NONE,           // SLOT_TRADE_COUPLE
    ITEM_NONE,           // SLOT_BOTTLE_1
    ITEM_NONE,           // SLOT_BOTTLE_2
    ITEM_NONE,           // SLOT_BOTTLE_3
    ITEM_NONE,           // SLOT_BOTTLE_4
    ITEM_NONE,           // SLOT_BOTTLE_5
    ITEM_NONE,           // SLOT_BOTTLE_6
};

// Stores flash start page number
s32 gFlashSaveStartPages[] = {
    0,     // File 1 New Cycle Save
    0x40,  // File 1 New Cycle Save Backup
    0x80,  // File 2 New Cycle Save
    0xC0,  // File 2 New Cycle Save Backup
    0x100, // File 1 Owl Save
    0x180, // File 1 Owl Save Backup
    0x200, // File 2 Owl Save
    0x280, // File 2 Owl Save Backup
    0x300, // Sram Header (SaveOptions)
    0x380, // Sram Header Backup (SaveOptions)
};

// Flash rom number of pages
s32 gFlashSaveNumPages[] = {
    0x40, // File 1 New Cycle Save
    0x40, // File 1 New Cycle Save Backup
    0x40, // File 2 New Cycle Save
    0x40, // File 2 New Cycle Save Backup
    0x80, // File 1 Owl Save
    0x80, // File 1 Owl Save Backup
    0x80, // File 2 Owl Save
    0x80, // File 2 Owl Save Backup
    1,    // Sram Header (SaveOptions)
    1,    // Sram Header Backup (SaveOptions)
};

// Flash rom number of pages on very first time Player enters South Clock Town from the Clock Tower
s32 gFlashSpecialSaveNumPages[] = {
    0x80, // File 1 New Cycle Save
    0x80, // File 1 New Cycle Save Backup
    0x80, // File 2 New Cycle Save
    0x80, // File 2 New Cycle Save Backup
    0x80, // File 1 Owl Save
    0x80, // File 1 Owl Save Backup
    0x80, // File 2 Owl Save
    0x80, // File 2 Owl Save Backup
    1,    // Sram Header (SaveOptions)
    1,    // Sram Header Backup (SaveOptions)
};

// Owl Save flash rom start page number
s32 gFlashOwlSaveStartPages[] = {
    0x100, // File 1 Owl Save
    0x180, // File 1 Owl Save Backup
    0x200, // File 2 Owl Save
    0x280, // File 2 Owl Save Backup
};

// Owl Save flash rom number of pages
s32 gFlashOwlSaveNumPages[] = {
    0x80, // File 1 Owl Save
    0x80, // File 1 Owl Save Backup
    0x80, // File 2 Owl Save
    0x80, // File 2 Owl Save Backup
};

// Save Options Sram Header flash rom start page number
s32 gFlashOptionsSaveStartPages[] = {
    0x300, // Sram Header (SaveOptions)
    0x380, // Sram Header Backup (SaveOptions)
};

// Save Options Sram Header flash rom number of pages
s32 gFlashOptionsSaveNumPages[] = {
    1, // Sram Header (SaveOptions)
    1, // Sram Header Backup (SaveOptions)
};

// Flash rom actual size needed
s32 gFlashSaveSizes[] = {
    sizeof(Save),                   // size = 0x100C - File 1 New Cycle Save
    sizeof(Save),                   // size = 0x100C - File 1 New Cycle Save Backup
    sizeof(Save),                   // size = 0x100C - File 2 New Cycle Save
    sizeof(Save),                   // size = 0x100C - File 2 New Cycle Save Backup
    offsetof(SaveContext, fileNum), // size = 0x3CA0 - File 1 Owl Save
    offsetof(SaveContext, fileNum), // size = 0x3CA0 - File 1 Owl Save Backup
    offsetof(SaveContext, fileNum), // size = 0x3CA0 - File 2 Owl Save
    offsetof(SaveContext, fileNum), // size = 0x3CA0 - File 2 Owl Save Backup
};

// Bit Flag array in which sBitFlags8[n] is (1 << n)
u8 sBitFlags8[] = {
    (1 << 0), (1 << 1), (1 << 2), (1 << 3), (1 << 4), (1 << 5), (1 << 6), (1 << 7),
};

u16 D_801F6AF0;
u8 D_801F6AF2;

void Sram_ClearHighscores(void);
void Player_UseItem(PlayState* play, Player* this, ItemId item);